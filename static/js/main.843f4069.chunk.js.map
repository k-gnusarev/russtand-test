{"version":3,"sources":["components/PopupMenu.js","components/listItems.js","components/Offices.js","components/Reports.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["PopupMenu","props","itemsList","React","useState","anchorEl","setAnchorEl","handleClose","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","menuLabel","Menu","id","keepMounted","open","Boolean","onClose","menuItems","map","item","MenuItem","mainListItems","ListItem","button","to","ListItemText","primary","regCenter","region","city","office","etc","rows","Orders","Fragment","Table","size","TableHead","TableRow","TableCell","align","TableBody","row","createData","platform","manufacturer","totalDevices","inUse","TabPanel","children","value","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","Reports","classes","setValue","className","AppBar","position","Tabs","onChange","newValue","aria-label","Tab","label","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","Dashboard","CssBaseline","Drawer","variant","clsx","List","Container","maxWidth","Grid","exact","path","xs","Paper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.843f4069.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default function PopupMenu(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const getMenuItems = (itemsList) => {\r\n    return itemsList.map(item => <MenuItem onClick={handleClose}>{item}</MenuItem>)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        {props.menuLabel}\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {getMenuItems(props.menuItems)}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PopupMenu from './PopupMenu.js';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <NavLink to='/locations'>\r\n        <ListItemText primary=\"Офисы\" />\r\n      </NavLink>\r\n    </ListItem>\r\n    <ListItem button>\r\n      <NavLink to='/hardware'>\r\n        <ListItemText primary=\"Оборудование\" />\r\n      </NavLink>\r\n    </ListItem>\r\n    <ListItem button>\r\n      <PopupMenu\r\n        menuLabel='Phones'\r\n        menuItems={[\r\n          'Телефоны инфо',\r\n          'Телефоны по ФИО',\r\n          'Телефоны с переадресацией',\r\n        ]}/>\r\n    </ListItem>\r\n    <ListItem button>\r\n      <PopupMenu\r\n        menuLabel='IP Planning'\r\n        menuItems={[\r\n          'IPAM',\r\n        ]}/>\r\n    </ListItem>\r\n    <ListItem button>\r\n      <NavLink to='/reports' >\r\n        <ListItemText primary=\"Reports\" />\r\n      </NavLink>\r\n    </ListItem>\r\n    <ListItem button>\r\n      <PopupMenu\r\n        menuLabel='Phones Reports'\r\n        menuItems={[\r\n          'По моделям',\r\n          'По кластерам',\r\n          'По неиспользуемым',\r\n          'По Agent Licences'\r\n        ]}/>\r\n    </ListItem>\r\n    <ListItem button>\r\n      <PopupMenu\r\n        menuLabel='Tools'\r\n        menuItems={[\r\n          'Поиск незарегистрированных телефонов',\r\n          'CUCM Маршрутизация',\r\n          'Testing CORS Requests'\r\n        ]}/>\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n// Данные для таблицы\r\nfunction createData(id, regCenter, region, city, office, etc) {\r\n  return { id, regCenter, region, city, office, etc };\r\n}\r\n\r\nconst rows = [\r\n  createData(0, 'ЦФО', 'Архангельск', 'Архангельск', 'Архангельск-Троицкий', 'и т. д.'),\r\n];\r\n\r\n// Структура таблицы\r\nexport default function Orders() {\r\n  return (\r\n    <React.Fragment>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Рег. центр</TableCell>\r\n            <TableCell>Регион</TableCell>\r\n            <TableCell>Город</TableCell>\r\n            <TableCell>Офис</TableCell>\r\n            <TableCell align=\"right\">И т.д.</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.regCenter}</TableCell>\r\n              <TableCell>{row.region}</TableCell>\r\n              <TableCell>{row.city}</TableCell>\r\n              <TableCell>{row.office}</TableCell>\r\n              <TableCell align=\"right\">{row.etc}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Данные таблицы\r\nfunction createData(id, platform, manufacturer, totalDevices, inUse, etc) {\r\n  return { id, platform, manufacturer, totalDevices, inUse, etc };\r\n}\r\n\r\nconst rows = [\r\n  createData(0, 'Платформа не указана', 'CISCO', '30', '0', 'и т. д.'),\r\n  createData(1, '1234', 'CISCO', '12', '34', 'и т. д.'),\r\n  createData(2, '5678', 'CISCO', '56', '78', 'и т. д.'),\r\n];\r\n\r\n// Таблица со вкладками\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Reports() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab label=\"По платформам\" {...a11yProps(0)} />\r\n          <Tab label=\"По модулям\" {...a11yProps(1)} />\r\n          <Tab label=\"По ПО\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Платформа</TableCell>\r\n            <TableCell>Производитель</TableCell>\r\n            <TableCell>Всего устройств</TableCell>\r\n            <TableCell>Активных</TableCell>\r\n            <TableCell align=\"right\">И т.д.</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.platform}</TableCell>\r\n              <TableCell>{row.manufacturer}</TableCell>\r\n              <TableCell>{row.totalDevices}</TableCell>\r\n              <TableCell>{row.inUse}</TableCell>\r\n              <TableCell align=\"right\">{row.etc}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        Здесь будет Таблица \"По модулям\"\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Здесь будет Таблица \"По ПО\"\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { mainListItems } from './listItems';\r\nimport Offices from './Offices';\r\nimport Reports from './Reports';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {  \r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <List>{mainListItems}</List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n              <Switch>\r\n                {/* Офисы */}\r\n                <Route exact path='/locations'>\r\n                  <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                      <Offices />\r\n                    </Paper>\r\n                  </Grid>\r\n                </Route>\r\n                {/* Оборудование */}\r\n                <Route exact path='/hardware'>\r\n                  <Grid item xs={12}>\r\n                    Здесь будет таблица \"Оборудование\"\r\n                  </Grid>\r\n                </Route>\r\n                {/* Отчёты */}\r\n                <Route exact path='/reports'>\r\n                  <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                      <Reports />\r\n                    </Paper>\r\n                  </Grid>\r\n                </Route>\r\n              </Switch>\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}","import Dashboard from './components/Dashboard.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}